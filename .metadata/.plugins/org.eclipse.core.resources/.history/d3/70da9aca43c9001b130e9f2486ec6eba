package com.lamichhane.mockito.business;



import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThat;
import static org.mockito.BDDMockito.given;
import static org.mockito.BDDMockito.then;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.never;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.ArgumentCaptor;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import com.lamichhane.mockito.data.api.ToDoService;

@RunWith(MockitoJUnitRunner.class)
class TodoBusinessImplMockitoInjectMocksTest {
	
	@Mock
	ToDoService todoServiceMock;

	@Test
	void testRetrieveTodosRelatedToSpring_usingAMock() 
	{
		
		
		List<String> todos=new ArrayList<>();
		todos.add("Learn Spring MVC");
		todos.add("Learn Spring");
		todos.add("Learn To Dance");
		
		when(todoServiceMock.retrieveTodos("Mahesh")).thenReturn(todos);
		
		TodoBusinessImpl todoBusinessImpl=new TodoBusinessImpl(todoServiceMock);
		
		List<String> filteredTodos=todoBusinessImpl.retrieveTodosRelatedToSpring("Mahesh");
		assertEquals(2,filteredTodos.size());
	}
	

	


	
	@Test
	void testDeleteTodosNotRelatedToSpring_usingBDDArgumentCapture() 
	{
		
		//Declare Argument Captor
		ArgumentCaptor<String> stringArgumentCaptor=ArgumentCaptor.forClass(String.class);
		
		
		//Given
		ToDoService todoServiceMock=mock(ToDoService.class);
		List<String> todos=new ArrayList<>();
		todos.add("Learn To Rock and Role");
		todos.add("Learn Spring");
		todos.add("Learn To Dance");
		
		//when(todoServiceMock.retrieveTodos("Mahesh")).thenReturn(todos);
		given(todoServiceMock.retrieveTodos("Dummy")).willReturn(todos);

		TodoBusinessImpl todoBusinessImpl=new TodoBusinessImpl(todoServiceMock);
		
		
		//When
		todoBusinessImpl.deleteToDosNotRelatedToSpring("Dummy");
		
		
		//Then 
		then(todoServiceMock).should(times(2)).deleteTodo(stringArgumentCaptor.capture());
		//assertThat(stringArgumentCaptor.getValue(),is("Learn To Dance"));
		assertThat(stringArgumentCaptor.getAllValues().size(),is(2));
		
		
	}

}
